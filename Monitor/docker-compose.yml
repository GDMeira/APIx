version: '3.8'
services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    ports:
      - 9187:9187
    environment:
      - DATA_SOURCE_URI=postgres:5432/postgres?sslmode=disable
      - DATA_SOURCE_USER=postgres
      - DATA_SOURCE_PASS=postgres

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - 5433:5432 # Map host port 5433 to container port 5432 (default for postgres)
    environment:
      - POSTGRES_PASSWORD=postgres # Set password for postgres user (replace with desired password)
      - POSTGRES_USER=postgres # Default postgres user
      - POSTGRES_DB=postgres # Default postgres database
    volumes:
      - postgres_data:/var/lib/postgresql/data

  apix:
    image: dotnetapi:latest
    build: 
      context: ../.
      dockerfile: Dockerfile
    container_name: apix
    ports:
      - 5045:5045
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Database__Host=postgres
      - Database__Port=5432
      - Database__Name=APIx_DB
      - QueueSettings__HostName=rabbitmq
      - Cache__Host=redis
    depends_on:
      - migrate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5045/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  migrate:
    image: dotnetapi-migration:latest
    build: 
      context: ../.
      dockerfile: Dockerfile.migrations
    container_name: migrate
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq:3.12.12-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
  
  psp-mock:
    image: psp-mock:latest
    container_name: psp-mock
    ports:
      - 5039:5039

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    
volumes:
  grafana:
  postgres_data:
  rabbitmq_data:
  redis_data: